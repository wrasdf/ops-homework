---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Version:
    Description: "0.0.1"
    Type: String
  KeyName:
    Description: Application ssh login keypair name
    Type: AWS::EC2::KeyPair::KeyName

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}-Cluster

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Split [ ',', !ImportValue my-cfn-private-subnets ]
      SecurityGroups:
      - !Ref ALBSecurityGroup
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-ALB

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client cluster
      VpcId: !ImportValue my-cfn-vpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: "-1"
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-ALB-SG

  ECSClusterAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Split [ ',', !ImportValue my-cfn-private-subnets ]
      LaunchConfigurationName: !Ref ECSClusterLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ECS-ClUSTER-ASG
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions
        WaitOnResourceSignals: true

  EcsClusterScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ECSClusterAutoScalingGroup
      Cooldown: 300
      ScalingAdjustment: 1

  EcsClusterScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ECSClusterAutoScalingGroup
      Cooldown: 300
      ScalingAdjustment: -1

  MemoryReservationHighAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-MemoryReservationHighAlert
      EvaluationPeriods: '1'
      Statistic: Maximum
      Threshold: '80'
      Period: '60'
      AlarmActions:
        - !Ref EcsClusterScaleUpPolicy
      OKActions:
        - !Ref EcsClusterScaleDownPolicy
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
      ComparisonOperator: GreaterThanThreshold
      MetricName: MemoryReservation
      Namespace: AWS/ECS

  CpuReservationHighAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-CpuReservationHighAlert
      EvaluationPeriods: '1'
      Statistic: Maximum
      Threshold: '80'
      Period: '60'
      AlarmActions:
        - !Ref EcsClusterScaleUpPolicy
      OKActions:
        - !Ref EcsClusterScaleDownPolicy
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUReservation
      Namespace: AWS/ECS

  ECSClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn:
      - ALBSecurityGroup
    Properties:
      GroupDescription: ECS Cluster Security Group
      VpcId: !ImportValue my-cfn-vpc
      SecurityGroupEgress:
      - IpProtocol: "-1"
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 32768
        ToPort: 61000
      - SourceSecurityGroupId: !Ref ALBSecurityGroup
        IpProtocol: -1
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-ECS-CLUSTER-SG

  ECSClusterLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref ECSClusterProfile
      ImageId: ami-58bb443a
      InstanceType: t2.medium
      SecurityGroups:
      - !Ref ECSClusterSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSClusterLaunchConfiguration
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSClusterAutoScalingGroup

          cat >> /etc/ecs/ecs.config <<EoConf
          ECS_CLUSTER=${ECSCluster}
          EoConf
          stop ecs
          start ecs

  ECSClusterProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref ECSClusterRole

  ECSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-ECSRole
      Path: /app/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: allow-logs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: !GetAtt ECSClusterLogGroup.Arn
        - PolicyName: allow-read-only-access-to-ecr
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:GetRepositoryPolicy
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:BatchGetImage
              Resource: "*"
        - PolicyName: allow-ecs-permissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - ecs:*
              Resource: "*"
        - PolicyName: allow-kms
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - kms:*
              Resource: "*"
        - PolicyName: allow-dynamodb
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:*
              Resource: "*"
        - PolicyName: allow-rds
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - rds:*
              Resource: "*"
        - PolicyName: allow-cloudwatch
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - cloudwatch:*
              Resource: "*"

  ECSClusterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-${AWS::Region}-ECS-log-group"
      RetentionInDays: 30

Outputs:
  ECSCluster:
    Description: A reference to the cluster
    Value: !Ref ECSCluster
    Export:
      Name: my-cfn-cluster
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer
    Export:
      Name: my-cfn-cluster-loadBalancer
  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt LoadBalancer.DNSName
